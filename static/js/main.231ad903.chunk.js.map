{"version":3,"sources":["utils/constants.tsx","services/LocalStorage.tsx","components/forms/IO/components/Radio.tsx","utils/Exception.tsx","data/courses.tsx","utils/utilities.tsx","components/forms/IO/components/ProgressCircle.tsx","components/forms/IO/IO.tsx","data/tests.tsx","data/progress.tsx","views/Home.tsx","views/Error.tsx","views/Login.tsx","views/Profile.tsx","components/forms/ScoreSelector.tsx","views/Learn.tsx","views/Practice.tsx","components/Layout/components/Footer.tsx","data/ThemeContext.tsx","components/Layout/components/MainNav.tsx","components/Layout/Layout.tsx","components/Preview.tsx","data/ContextLoader.tsx","App.tsx","index.tsx"],"names":["ID","VERSION","CONTENT","PATH_INDEX","PATH_LOGIN","PATH_ERROR","PATH_LEARN","PATH_PRACTICE","APP_VER","CONTENT_VER","USERNAME","PREVIEW","PROGRESS","TESTS","THEME_COLOR","THEME_FONT","LocalStorage","getItem","key","window","localStorage","setItem","value","getMap","Map","JSON","parse","setMap","map","stringify","Array","from","entries","removeItem","Radio","name","checked","children","validation","onChange","className","type","validate","ECourseType","Exception","invalidNumber","min","max","Error","invalidId","property","id","idNotFound","localStorageNotFound","entry","courses","category","Types","available","title","description","sections","example","Operators","Pointers","Objects","Functions","Events","getCourses","Text","toParagraph","text","split","line","uuid","toPercentage","number","Math","floor","Icon","byValue","faSmileBeam","faSmileWink","faSmile","faFrown","faSadTear","faQuestionCircle","byType","faFont","faWrench","faHandPointLeft","faSitemap","faStream","faBolt","faCode","ProgressCircle","size","showPercentage","useState","displayValue","setDisplayValue","useEffect","isNaN","timer","setTimeout","console","log","clearTimeout","style","fontSize","cx","cy","r","strokeDashoffset","tests","subjects","questions","question","options","answer","hint","getTests","getProgress","getScore","get","updateScore","progress","set","getProgressSummary","summary","Object","values","forEach","score","divider","course","getProgressOverall","scores","done","undefined","sum","next","getTestsScores","updateTestScore","last","best","Home","user","useContext","userContext","out","test","testScore","push","to","icon","renderPracticeCards","listItems","filter","renderLearnCards","navigator","useNavigate","onClick","Login","onLogin","inputName","setInputName","navigate","handleRegister","event","preview","preventDefault","displayName","charAt","toUpperCase","slice","toLowerCase","faUserCircle","onSubmit","placeholder","currentTarget","Profile","ICONS","ScoreSelector","courseId","setScore","index","length","Learn","params","useParams","setCourse","c","find","getCourseDetails","error","SyntaxHighlighter","registerLanguage","csharp","highlightAll","section","Practice","username","testDetails","setTestDetails","setQuestions","setTestScore","setValidation","handleValidation","qIndex","oIndex","selected","getTestDetails","qs","disabled","option","message","renderScore","Footer","EThemeColor","EThemeFont","date","Date","href","faGithub","getFullYear","ThemeColorContext","createContext","ThemeFontContext","ThemeContext","Dark","color","setColor","Normal","font","setFont","document","body","setAttribute","toString","classList","add","handle","remove","Provider","toggleColor","Light","toggleFont","Large","MainNav","location","useLocation","background","setBackground","scrollY","scroll","setScroll","open","setOpen","tab","setTab","renderLearnTab","renderPracticeTab","handleTabChange","newTab","addEventListener","target","HTMLAnchorElement","contains","nav","useRef","current","pathname","ref","faGraduationCap","faBars","faPaintBrush","renderTabs","Layout","Preview","ContextLoader","App","setUsername","previewMode","setPreviewMode","path","element","newUsername","random","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.231ad903.chunk.js","sourcesContent":["// App\r\nexport const ID = 'com.homework.app';\r\nexport const VERSION = '0.2.4';\r\nexport const CONTENT = '0.2.1';\r\n\r\n// Paths\r\nexport const PATH_INDEX = '/homework';\r\nexport const PATH_LOGIN = PATH_INDEX + '/login';\r\nexport const PATH_PROFILE = PATH_INDEX + '/profile';\r\nexport const PATH_ERROR = PATH_INDEX + '/error';\r\nexport const PATH_LEARN = PATH_INDEX + '/learn/';\r\nexport const PATH_PRACTICE = PATH_INDEX + '/practice/';\r\n\r\n// Local storage entries\r\nexport const APP_ID = 'id';\r\nexport const APP_VER = 'version';\r\nexport const CONTENT_VER = 'content';\r\nexport const USERNAME = 'username';\r\nexport const PREVIEW = 'preview';\r\nexport const PROGRESS = 'progress';\r\nexport const TESTS = 'tests';\r\nexport const THEME_COLOR = 'theme.color';\r\nexport const THEME_FONT = 'theme.font';\r\n","import React from 'react';\r\nimport { ID } from '../utils/constants';\r\n\r\nfunction getItem(key: string): any {\r\n   return window.localStorage.getItem(ID + '.' + key);\r\n}\r\n\r\nfunction setItem(key: string, value: any): void {\r\n   window.localStorage.setItem(ID + '.' + key, value);\r\n}\r\n\r\nfunction getMap(key: string): Map<any, any> {\r\n   const value = window.localStorage.getItem(ID + '.' + key);\r\n   return new Map(JSON.parse(value || '[]'));\r\n}\r\n\r\nfunction setMap(key: string, map: Map<any, any>): void {\r\n   const value = JSON.stringify(Array.from(map.entries()));\r\n   window.localStorage.setItem(ID + '.' + key, value);\r\n}\r\n\r\nfunction removeItem(key: string): void {\r\n   window.localStorage.removeItem(ID + '.' + key);\r\n}\r\n\r\nexport const LocalStorage = {\r\n   getItem,\r\n   setItem,\r\n   getMap,\r\n   setMap,\r\n   removeItem,\r\n};\r\n","import React from 'react';\r\nimport { IRadio, validate } from '../IO';\r\n\r\nfunction Radio({\r\n   name,\r\n   checked,\r\n   children,\r\n   value,\r\n   validation,\r\n   onChange,\r\n}: IRadio): React.ReactElement {\r\n   return (\r\n      <label className=\"io radio\">\r\n         <input\r\n            type=\"radio\"\r\n            name={name}\r\n            checked={checked}\r\n            value={value}\r\n            onChange={onChange}\r\n         />\r\n         <span className={validate('radio-dot', validation)} />\r\n         {children}\r\n      </label>\r\n   );\r\n}\r\n\r\nexport default Radio;\r\n","function invalidNumber(value: number, min: number = 0, max: number = 1) {\r\n   return new Error(`Invalid value ${value}, expected range: ${min} to ${max}!`);\r\n}\r\n\r\nfunction invalidId(property: string, id: string): Error {\r\n   return new Error(`Invalid ${property}'s ID: '${id}'!`);\r\n}\r\n\r\nfunction idNotFound(property: string, id: string): Error {\r\n   return new Error(`Couldn't find ${property}'s ID: '${id}'!`);\r\n}\r\n\r\nfunction localStorageNotFound(entry: string) {\r\n   return new Error(`Couldn't find ${entry} in local storage!`);\r\n}\r\n\r\nexport const Exception = {\r\n   invalidNumber,\r\n   invalidId,\r\n   idNotFound,\r\n   localStorageNotFound,\r\n};\r\n","import { Exception } from '../utils/Exception';\r\n\r\nexport enum ECourseType {\r\n   Types = 'Types',\r\n   Operators = 'Operators',\r\n   Pointers = 'Pointers',\r\n   Objects = 'Objects',\r\n   Functions = 'Functions',\r\n   Events = 'Events',\r\n}\r\n\r\nexport interface ICourse {\r\n   id: string;\r\n   category: ECourseType;\r\n   name: string;\r\n   available: boolean;\r\n}\r\n\r\nexport interface ICourseDetails extends ICourse {\r\n   title: string;\r\n   description: string;\r\n   sections: ICourseSection[];\r\n}\r\n\r\nexport interface ICourseSection {\r\n   title: string;\r\n   description: string;\r\n   example?: string;\r\n}\r\n\r\nconst courses: ICourseDetails[] = [\r\n   {\r\n      id: 'primitive-types',\r\n      category: ECourseType.Types,\r\n      name: 'Primitive',\r\n      available: true,\r\n      title: 'Primitive types',\r\n      description: `Primitive types are the most basic types.`,\r\n      sections: [\r\n         {\r\n            title: 'bool',\r\n            description: `bool(Boolean) is the smallest type, it has only 2 possible states: True or False.\r\n               Booleans are mainly used in comparison operations.`,\r\n            example: `// Declaration and usage\r\n   bool isOnline = true;\r\n\r\n   if (isOnline) {\r\n      Console.WriteLine(\"Connection established!\");\r\n   }`,\r\n         },\r\n         {\r\n            title: `int, float and double`,\r\n            description: `int(integer), float, and double are numerical types, they represent numbers.\r\n               Each one has it's use case, typically we want to use the smallest type possible.\r\n      \r\n               int is the smallest one, it can hold only whole numbers.\r\n               Mainly use for counting stuff, like days, age, number of objects, indexes, etc..\r\n      \r\n               float is in the middle, it can hold decimal numbers, it's much lighter than double but less accurate.\r\n               Mainly use for stuff that doesn't require great precision and simple math.\r\n               Input number MUST use one of this formats: 0f, 0.0f\r\n      \r\n               double is the largest one, it can hold decimal numbers, it's heavy but accurate.\r\n               Mainly use for stuff that requires great precision like balance and currency.`,\r\n            example: `// Declaration\r\n   int age = 30;\r\n   float distance = 450.562f;\r\n   double balance1 = 1115313.315134d; // The d at the end is optional`,\r\n         },\r\n         {\r\n            title: `char and string`,\r\n            description: `char and strings types used for representing letter or text.\r\n      \r\n               char can hold only 1 letter which make it the smaller one.\r\n               Mainly used for storing letters and symbols, useful when dealing with ASCII.\r\n               Input letter MUST use this format: 'x'\r\n               \r\n               string can hold from 1 letter to full sentences, it's much larger and it grow by the amount of text that it's storing.\r\n               Mainly used for text.\r\n               Input text MUST use this format: \"Text\"`,\r\n            example: `// Declaration\r\n   char theLetterB = 'B';\r\n   string message = \"Oh no, we are out of milk!\";`,\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      id: 'complex-types',\r\n      category: ECourseType.Types,\r\n      name: 'Complex',\r\n      available: false,\r\n      title: 'Complex types',\r\n      description: `This course is under construction.`,\r\n      sections: [],\r\n   },\r\n   {\r\n      id: 'math-operators',\r\n      category: ECourseType.Operators,\r\n      name: 'Math',\r\n      available: true,\r\n      title: 'Math operators',\r\n      description: `Math operators allow us to preform math operations.`,\r\n      sections: [\r\n         {\r\n            title: 'Basic math operators',\r\n            description: `Their soul purpose is to do basic math operations.`,\r\n            example: `// Usage\r\n   double result = 0;\r\n   \r\n   result = 5 + 10;\\t// result = 15\r\n   result = 5 - 10;\\t// result = -5\r\n   result = 5 * 10;\\t// result = 50\r\n   result = 5 / 10;\\t// result = 0.5\r\n   result = 5 % 10;\\t// result = 5`,\r\n         },\r\n         {\r\n            title: `Setter math operators`,\r\n            description: `Those operators work the same as the basic ones, the only different is that they use the variable value and then set the variable value to the result.\r\n            Essentially \"x += y\" is the same as \"x = x + y\".`,\r\n            example: `// Usage\r\n   double result = 10;\r\n   \r\n   result += 5;\\t\\t// result = 15\r\n   result -= 5;\\t\\t// result = 5\r\n   result *= 5;\\t\\t// result = 50\r\n   result /= 5;\\t\\t// result = 2\r\n   result %= 5;\\t\\t// result = 0`,\r\n         },\r\n         {\r\n            title: `Shortcut math operators`,\r\n            description: `There are shortcuts to save us some time and to help us with cleaner code.\r\n            The 2 main ones are \"++\" and \"--\" they are used to add or subtract 1 from from the givin variable and set its value to the result.\r\n            Essentially \"x++\" is the same as \"x = x + 1\".\r\n\r\n            In most cases we write them after the variable name like that: index++, in this case the returned value will be the original value before adding 1.\r\n            If we want to return the value after adding 1 we will write them before the variable name like that: ++index.\r\n            \r\n            Note: They will always add 1 even if the variable type is float or double.\r\n\r\n            Note: They can be chained but it's highly not recommended, you should use setter math operators instead.`,\r\n            example: `// Usage\r\n   int x = 0;\r\n   int result = 0;\r\n\r\n   result = x++;\\t// result = 0, x = 1\r\n   result = x--;\\t// result = 0, x = -1\r\n   result = ++x;\\t// result = 1, x = 1\r\n   result = --x;\\t// result = -1, x = -1\r\n   \r\n// Other types\r\n   double myDouble = 0.0;\r\n   myDouble++;\\t\\t// myDouble = 1.0\r\n\r\n   float myFloat = 0.0f;\r\n   myFloat++;\\t\\t// myFloat = 1.0f\r\n\r\n// Chaining\r\n   x++++;\\t\\t// x = 2, Use x+=2 instead!\r\n   x++++++;\\t\\t// x = 3, Use x+=3 instead!`,\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      id: 'condition-operators',\r\n      category: ECourseType.Operators,\r\n      name: 'Condition',\r\n      available: true,\r\n      title: 'Condition operators',\r\n      description: `Condition operators test the values and return a bool.`,\r\n      sections: [\r\n         {\r\n            title: 'Basic condition operators',\r\n            description: `Those operators take 2 values and test them.\r\n            \r\n            \">\" and \"<\" Check if the value is greater than or less than.\r\n            \">=\" and \"<=\" Check if the value is greater than or less than or equal(same as \"==\").\r\n            \"==\" return true if both values are the same, else false.\r\n            \"!=\" return false if both values are the same, else true.`,\r\n            example: `// Usage\r\n   bool result = false;\r\n   \r\n// With numbers\r\n   result = 5 > 10;\\t\\t// result = false\r\n   result = 5 < 10;\\t\\t// result = true\r\n   result = 5 >= 10;\\t\\t// result = false\r\n   result = 5 <= 10;\\t\\t// result = true\r\n   result = 5 == 10;\\t\\t// result = false\r\n   result = 5 != 10;\\t\\t// result = true\r\n   \r\n// With text\r\n   result = \"Hello\" == \"World\";\\t// result = false\r\n   result = 'A' != 'B';\\t\\t// result = true`,\r\n         },\r\n         {\r\n            title: `&& operator`,\r\n            description: `The AND operator return true if BOTH conditions are true.`,\r\n            example: `// Usage\r\n   bool result = false;\r\n   \r\n   result = true && true;\\t// result = true\r\n   result = true && false;\\t// result = false\r\n   result = false && true;\\t// result = false\r\n   result = false && false;\\t// result = false`,\r\n         },\r\n         {\r\n            title: `|| operator`,\r\n            description: `The OR operator return true if ONE of the conditions is true.`,\r\n            example: `// Usage\r\n   bool result = false;\r\n   \r\n   result = true || true;\\t// result = true\r\n   result = true || false;\\t// result = true\r\n   result = false || true;\\t// result = true\r\n   result = false || false;\\t// result = false`,\r\n         },\r\n         {\r\n            title: `^^ operator`,\r\n            description: `The XOR operator return true if ONE of the conditions is true but NOT BOTH.`,\r\n            example: `// Usage\r\n   bool result = false;\r\n   \r\n   result = true ^^ true;\\t// result = true\r\n   result = true ^^ false;\\t// result = false\r\n   result = false ^^ true;\\t// result = false\r\n   result = false ^^ false;\\t// result = false`,\r\n         },\r\n         {\r\n            title: `! operator`,\r\n            description: `The NOT operator return true if the condition is false.`,\r\n            example: `// Usage\r\n   bool result = false;\r\n   \r\n   result = !true;\\t\\t// result = false\r\n   result = !false;\\t\\t// result = true`,\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      id: 'basic-pointers',\r\n      category: ECourseType.Pointers,\r\n      name: 'Overview',\r\n      available: false,\r\n      title: 'Pointers overview',\r\n      description: `This course is under construction.`,\r\n      sections: [],\r\n   },\r\n   {\r\n      id: 'advanced-pointers',\r\n      category: ECourseType.Pointers,\r\n      name: 'Advanced',\r\n      available: false,\r\n      title: 'Advanced overview',\r\n      description: `This course is under construction.`,\r\n      sections: [],\r\n   },\r\n   {\r\n      id: 'objects-overview',\r\n      category: ECourseType.Objects,\r\n      name: 'Overview',\r\n      available: false,\r\n      title: 'Objects overview',\r\n      description: `This course is under construction.`,\r\n      sections: [],\r\n   },\r\n   {\r\n      id: 'objects-inheritance',\r\n      category: ECourseType.Objects,\r\n      name: 'Inheritance',\r\n      available: false,\r\n      title: 'Object inheritance',\r\n      description: `This course is under construction.`,\r\n      sections: [],\r\n   },\r\n   {\r\n      id: 'functions-overview',\r\n      category: ECourseType.Functions,\r\n      name: 'Overview',\r\n      available: false,\r\n      title: 'Functions overview',\r\n      description: `This course is under construction.`,\r\n      sections: [],\r\n   },\r\n   {\r\n      id: 'recursive-functions',\r\n      category: ECourseType.Functions,\r\n      name: 'Recursion',\r\n      available: false,\r\n      title: 'Recursive functions',\r\n      description: `This course is under construction.`,\r\n      sections: [],\r\n   },\r\n   {\r\n      id: 'events-overview',\r\n      category: ECourseType.Events,\r\n      name: 'Overview',\r\n      available: false,\r\n      title: 'Events overview',\r\n      description: `This course is under construction.`,\r\n      sections: [],\r\n   },\r\n   {\r\n      id: 'async-events',\r\n      category: ECourseType.Events,\r\n      name: 'Asynchronous',\r\n      available: false,\r\n      title: 'Async events',\r\n      description: `This course is under construction.`,\r\n      sections: [],\r\n   },\r\n];\r\n\r\nexport function getCourses(): ICourse[] {\r\n   return [...courses];\r\n}\r\n\r\nexport function getCourse(id: string): ICourse {\r\n   const course = courses.find((course: ICourse) => {\r\n      return course.id === id;\r\n   });\r\n\r\n   if (course) {\r\n      return course;\r\n   } else {\r\n      throw Exception.idNotFound('course', id);\r\n   }\r\n}\r\n\r\nexport function getCourseDetails(id: string): ICourseDetails {\r\n   const course = courses.find((course: ICourse) => {\r\n      return course.id === id;\r\n   });\r\n\r\n   if (course) {\r\n      return course;\r\n   } else {\r\n      throw Exception.idNotFound('course', id);\r\n   }\r\n}\r\n","import React from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n   faSmileBeam,\r\n   faSmileWink,\r\n   faSmile,\r\n   faFrown,\r\n   faSadTear,\r\n   faQuestionCircle,\r\n   faBolt,\r\n   faCode,\r\n   faFont,\r\n   faHandPointLeft,\r\n   faSitemap,\r\n   faStream,\r\n   faWrench,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { ECourseType } from '../data/courses';\r\n\r\n// Text\r\nfunction toParagraph(text: string): React.ReactElement[] {\r\n   const lines = text.split('\\n');\r\n   return lines.map((line) => {\r\n      return (\r\n         <span key={uuid()}>\r\n            {line}\r\n            <br />\r\n         </span>\r\n      );\r\n   });\r\n}\r\n\r\nfunction toPercentage(number: number): string {\r\n   return Math.floor(number * 100) + '%';\r\n}\r\n\r\nexport const Text = {\r\n   toParagraph,\r\n   toPercentage,\r\n};\r\n\r\n// Icons\r\nfunction byValue(value: number): IconProp {\r\n   if (value >= 0.8) {\r\n      return faSmileBeam;\r\n   } else if (value == 0.69) {\r\n      return faSmileWink;\r\n   } else if (value >= 0.6) {\r\n      return faSmile;\r\n   } else if (value >= 0.4) {\r\n      return faFrown;\r\n   } else if (value > 0) {\r\n      return faSadTear;\r\n   }\r\n   return faQuestionCircle;\r\n}\r\n\r\nfunction byType(type: ECourseType | string): IconProp {\r\n   switch (type) {\r\n      case ECourseType.Types:\r\n         return faFont;\r\n      case ECourseType.Operators:\r\n         return faWrench;\r\n      case ECourseType.Pointers:\r\n         return faHandPointLeft;\r\n      case ECourseType.Objects:\r\n         return faSitemap;\r\n      case ECourseType.Functions:\r\n         return faStream;\r\n      case ECourseType.Events:\r\n         return faBolt;\r\n      default:\r\n         return faCode;\r\n   }\r\n}\r\n\r\nexport const Icon = {\r\n   byValue,\r\n   byType,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { IProgressBar } from '../IO';\r\n\r\nimport { Text } from '../../../../utils/utilities';\r\n\r\nfunction ProgressCircle({ value, size = 3, showPercentage = true }: IProgressBar): React.ReactElement {\r\n   const [displayValue, setDisplayValue] = useState(0);\r\n\r\n   useEffect(() => {\r\n      if (isNaN(value) || displayValue >= value) return;\r\n\r\n      const timer = setTimeout(() => {\r\n         setDisplayValue(displayValue + 0.01);\r\n         console.log(displayValue);\r\n      }, 15);\r\n\r\n      return () => {\r\n         clearTimeout(timer);\r\n      };\r\n   }, [displayValue]);\r\n\r\n   return (\r\n      <div\r\n         className=\"io progress\"\r\n         style={{\r\n            fontSize: size + 'em',\r\n         }}\r\n      >\r\n         <svg>\r\n            <circle cx={'1em'} cy={'1em'} r={'.8em'} />\r\n            <circle\r\n               className={value > 0 ? '' : 'hide'}\r\n               cx={'1em'}\r\n               cy={'1em'}\r\n               r={'.8em'}\r\n               style={{\r\n                  strokeDashoffset: `calc(5.025em - (5.025em * ${displayValue}))`,\r\n               }}\r\n            />\r\n         </svg>\r\n         <div className=\"d-flex flex-column align-items-center justify-content-center label\">\r\n            <div className={showPercentage ? 'text-center' : 'collapse'}>\r\n               <p>{Text.toPercentage(value || 0)}</p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ProgressCircle;\r\n","import React from 'react';\r\nimport Radio from './components/Radio';\r\nimport ProgressCircle from './components/ProgressCircle';\r\n\r\nimport '../../../styles/IO.css';\r\n\r\nexport interface IInput {\r\n   name?: string;\r\n   value: number;\r\n   children?: React.ReactElement | string;\r\n   validation?: boolean | undefined;\r\n}\r\n\r\nexport interface IButton extends IInput {\r\n   onClick: (event: any) => void;\r\n}\r\n\r\nexport interface IRadio extends IInput {\r\n   checked: boolean;\r\n   onChange: (event: any) => void;\r\n}\r\n\r\nexport interface IProgressBar extends IInput {\r\n   value: number;\r\n   size?: number;\r\n   thickness?: number;\r\n   showPercentage?: boolean;\r\n   label?: string;\r\n}\r\n\r\nexport function validate(className: string, validate: boolean | undefined): string {\r\n   switch (validate) {\r\n      case true:\r\n         return className + ' valid';\r\n      case false:\r\n         return className + ' invalid';\r\n      default:\r\n         return className;\r\n   }\r\n}\r\n\r\nexport { Radio, ProgressCircle };\r\n","import { Exception } from '../utils/Exception';\r\n\r\nimport { ECourseType, ICourse } from './courses';\r\n\r\nexport interface ITestDetails extends ICourse {\r\n   title: string;\r\n   description: string;\r\n   subjects: string[];\r\n   questions: ITestQuestion[];\r\n}\r\n\r\nexport interface ITestQuestion {\r\n   question: string;\r\n   description: string;\r\n   options: string[];\r\n   hint?: string;\r\n   answer: number;\r\n}\r\n\r\nconst tests: ITestDetails[] = [\r\n   {\r\n      id: 'types-test',\r\n      category: ECourseType.Types,\r\n      name: 'Declaration and usage',\r\n      available: true,\r\n      title: 'Types declaration and usage',\r\n      description: 'This test focus on types declaration and usage.',\r\n      subjects: ['primitive-types', 'complex-types'],\r\n      questions: [\r\n         {\r\n            question: 'Which variable declaration is most suited for counting whole apples?',\r\n            description: '',\r\n            options: ['double apples = 3;', 'apples = 3;', 'int apples = 3;', 'apples = 3.0;'],\r\n            answer: 2,\r\n            hint: 'We want to declare a variable that store whole numbers.',\r\n         },\r\n         {\r\n            question: 'Which variable declaration is most suited for an account balance?',\r\n            description: '',\r\n            options: [\r\n               'balance = 32163.51;',\r\n               'int balance = 32163.51;',\r\n               'float balance = 32163.51;',\r\n               'double balance = 32163.51;',\r\n            ],\r\n            answer: 3,\r\n            hint: 'We want to declare a variable that can hold large decimal numbers.',\r\n         },\r\n         {\r\n            question: 'Which variable declaration is correct for type int?',\r\n            description: '',\r\n            options: ['int dogs = 2;', 'int dogs = 2i;', 'int dogs = 2f;', 'int dogs = 2d;'],\r\n            answer: 0,\r\n         },\r\n         {\r\n            question: 'Which variable declaration is correct for type float?',\r\n            description: '',\r\n            options: [\r\n               'float lengthInMeters = 2.0;',\r\n               'float lengthInMeters = 2.0i;',\r\n               'float lengthInMeters = 2.0f;',\r\n               'float lengthInMeters = 2.0d;',\r\n            ],\r\n            answer: 2,\r\n         },\r\n         {\r\n            question: 'Which variable declaration is correct for type double?',\r\n            description: '',\r\n            options: [\r\n               \"double coinValue = '0.00005649';\",\r\n               'double coinValue = 0.00005649i;',\r\n               'double coinValue = 0.00005649f;',\r\n               'double coinValue = 0.00005649d;',\r\n            ],\r\n            answer: 3,\r\n         },\r\n         {\r\n            question: 'Which variable declaration is correct for type char?',\r\n            description: '',\r\n            options: ['char letter = A;', 'char letter = \"A\";', \"char letter = 'A';\", 'char letter = `A`;'],\r\n            answer: 2,\r\n         },\r\n         {\r\n            question: 'Which variable declaration is correct for type string?',\r\n            description: '',\r\n            options: [\r\n               'string msg = Hello world!;',\r\n               'string msg = \"Hello world!\";',\r\n               \"string msg = 'Hello world!';\",\r\n               'string msg = `Hello world!`;',\r\n            ],\r\n            answer: 1,\r\n         },\r\n         {\r\n            question: 'Which variable declaration is incorrect?',\r\n            description: '',\r\n            options: [\r\n               'string greeting = \"Welcome!\";',\r\n               \"char grade = 'C';\",\r\n               'int flightNumber = 526EB01;',\r\n               'double pie = 3.14;',\r\n            ],\r\n            answer: 2,\r\n            hint: 'Look at the values.',\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      id: 'operators-test',\r\n      category: ECourseType.Operators,\r\n      name: 'Math and condition usage',\r\n      available: true,\r\n      title: 'Operators usage',\r\n      description: 'This test focus on math and condition operators.',\r\n      subjects: ['math-operators', 'condition-operators'],\r\n      questions: [\r\n         {\r\n            question: 'Which statement will result in \"x = y + 1\" AND \"y = y + 1\"?',\r\n            description: '',\r\n            options: ['double x = y;', 'double x = y + 1;', 'double x = y++;', 'double x = ++y;'],\r\n            answer: 3,\r\n            hint: 'We want to increase \"y\" by 1 and pass it to \"x\".',\r\n         },\r\n         {\r\n            question: 'Which statement will NOT give us the message \"Hello world\"?',\r\n            description: '',\r\n            options: [\r\n               'Console.WriteLine(\"Hello world\");',\r\n               'Console.WriteLine(\"Hello \" + \"world\");',\r\n               'Console.WriteLine(\"Hello\" + \" world\");',\r\n               'Console.WriteLine(\"Hello\" + \"world\");',\r\n            ],\r\n            answer: 3,\r\n            hint: 'Pay attention to the spaces.',\r\n         },\r\n         {\r\n            question: 'Which condition is true?',\r\n            description: '',\r\n            options: ['true != true', 'true == false', 'true != !true', 'false == !false'],\r\n            answer: 2,\r\n         },\r\n         {\r\n            question: 'Which condition is true?',\r\n            description: '',\r\n            options: [\r\n               '(10 > 10) && (10 < 10)',\r\n               '(10 > 10) || (10 < 10)',\r\n               '(10 >= 10) == (10 <= 10)',\r\n               '(10 >= 10) != (10 <= 10)',\r\n            ],\r\n            answer: 2,\r\n         },\r\n         {\r\n            question: 'Which condition is true?',\r\n            description: '',\r\n            options: [\r\n               '(!true) && (10 < 10)',\r\n               '(10 > 10) || (!false)',\r\n               '(!true) == (10 <= 10)',\r\n               '(10 >= 10) != (!true)',\r\n            ],\r\n            answer: 1,\r\n         },\r\n         {\r\n            question: 'Which condition is true?',\r\n            description: '',\r\n            options: [\r\n               'true && false && true && false',\r\n               'true || false || true || false',\r\n               'true == false == true == false',\r\n               'true == false != true == false',\r\n            ],\r\n            answer: 1,\r\n         },\r\n         {\r\n            question: 'Which condition is true?',\r\n            description: '',\r\n            options: [\r\n               '(true != true) && (true == false)',\r\n               '(true != true) || (true == false)',\r\n               '(true != true) == (true == false)',\r\n               '(true != true) != (true == false)',\r\n            ],\r\n            answer: 2,\r\n         },\r\n         {\r\n            question: 'Which condition is false?',\r\n            description: '',\r\n            options: [\r\n               '(true == true) && (true != false)',\r\n               '(true != true) || (true != false)',\r\n               '(!true != true) == (true == !false)',\r\n               '(true == true) != (true == !false)',\r\n            ],\r\n            answer: 3,\r\n         },\r\n         {\r\n            question: 'Which condition is false?',\r\n            description: '',\r\n            options: [\r\n               '(true ^^ !true) && (true == !false)',\r\n               '(true == !true) || (true && !false)',\r\n               '(true && !true) ^^ (true || !false)',\r\n               '(true || !true) == (true ^^ !false)',\r\n            ],\r\n            answer: 3,\r\n         },\r\n         {\r\n            question: 'Which condition is false?',\r\n            description: '',\r\n            options: [\r\n               '(true || true) && !(true || true)',\r\n               '!(true ^^ true) || (true ^^ false)',\r\n               '(true && true) ^^ !(true || false)',\r\n               '!(true || true) == (true && false)',\r\n            ],\r\n            answer: 0,\r\n         },\r\n      ],\r\n   },\r\n   {\r\n      id: 'pointers-test',\r\n      category: ECourseType.Pointers,\r\n      name: 'Declaration and usage',\r\n      available: false,\r\n      title: 'Pointers declaration and usage',\r\n      subjects: [],\r\n      description: 'This test is under construction.',\r\n      questions: [],\r\n   },\r\n   {\r\n      id: 'objects-test',\r\n      category: ECourseType.Objects,\r\n      name: 'Declaration, usage and inheritance',\r\n      available: false,\r\n      title: 'Objects declaration, usage and inheritance',\r\n      subjects: [],\r\n      description: 'This test is under construction.',\r\n      questions: [],\r\n   },\r\n   {\r\n      id: 'functions-test',\r\n      category: ECourseType.Functions,\r\n      name: 'Declaration and recursion',\r\n      available: false,\r\n      title: 'Functions declaration and recursion',\r\n      description: 'This test is under construction.',\r\n      subjects: [],\r\n      questions: [],\r\n   },\r\n   {\r\n      id: 'events-test',\r\n      category: ECourseType.Events,\r\n      name: 'Declaration and usage',\r\n      available: false,\r\n      title: 'Events declaration and usage',\r\n      description: 'This test is under construction.',\r\n      subjects: [],\r\n      questions: [],\r\n   },\r\n];\r\n\r\nexport function getTests(): ICourse[] {\r\n   return [...tests];\r\n}\r\n\r\nexport function getTest(id: string): ICourse {\r\n   const course = tests.find((test: ICourse) => {\r\n      return test.id === id;\r\n   });\r\n\r\n   if (course) {\r\n      return course;\r\n   } else {\r\n      throw Exception.idNotFound('test', id);\r\n   }\r\n}\r\n\r\nexport function getTestDetails(id: string): ITestDetails {\r\n   const test = tests.find((test: ICourse) => {\r\n      return test.id === id;\r\n   });\r\n\r\n   if (test) {\r\n      return test;\r\n   } else {\r\n      throw Exception.idNotFound('test', id);\r\n   }\r\n}\r\n","import { LocalStorage } from '../services/LocalStorage';\r\n\r\nimport { PROGRESS, TESTS } from '../utils/constants';\r\n\r\nimport { ECourseType, getCourses, ICourse } from './courses';\r\n\r\nexport type TProgress = Map<string, number>;\r\n\r\nexport function getProgress(): TProgress {\r\n   return LocalStorage.getMap(PROGRESS);\r\n}\r\n\r\nexport function getScore(id: string): number {\r\n   const progress = getProgress();\r\n   return progress.get(id) || 0;\r\n}\r\n\r\nexport function updateScore(id: string, value: number): void {\r\n   const progress = getProgress();\r\n   progress.set(id, value);\r\n   LocalStorage.setMap(PROGRESS, progress);\r\n}\r\n\r\nexport function getProgressSummary(): TProgress {\r\n   const progress = getProgress();\r\n   const courses = getCourses();\r\n   const summary = new Map();\r\n\r\n   Object.values(ECourseType).forEach((type: string) => {\r\n      let score = 0;\r\n      let divider = 0;\r\n      courses.forEach((course: ICourse) => {\r\n         if (course.category === type) {\r\n            score += progress.get(course.id) || 0;\r\n            divider++;\r\n         }\r\n      });\r\n      summary.set(type, score / divider);\r\n   });\r\n\r\n   return summary;\r\n}\r\n\r\nexport function getProgressOverall(): number {\r\n   const summary = getProgressSummary();\r\n   const scores = summary.values();\r\n\r\n   let done = undefined;\r\n   let value = 0;\r\n   let sum = 0;\r\n\r\n   do {\r\n      ({ value, done } = scores.next());\r\n      sum += value || 0;\r\n   } while (!done);\r\n\r\n   return sum / summary.size;\r\n}\r\n\r\nexport interface ITestScore {\r\n   value: number;\r\n   best: number;\r\n   last: number;\r\n}\r\n\r\nexport type TTestScore = Map<string, ITestScore>;\r\n\r\nexport function getTestsScores(): TTestScore {\r\n   return LocalStorage.getMap(TESTS);\r\n}\r\n\r\nexport function getTestScore(id: string): ITestScore | null {\r\n   const scores = getTestsScores();\r\n   return scores.get(id) || null;\r\n}\r\n\r\nexport function updateTestScore(id: string, value: number): void {\r\n   const scores = getTestsScores();\r\n   let score = scores.get(id);\r\n   if (score) {\r\n      score.last = score.value;\r\n      score.value = value;\r\n      if (score.best < value) {\r\n         score.best = value;\r\n      }\r\n   } else {\r\n      score = {\r\n         value: value,\r\n         best: value,\r\n         last: 0,\r\n      };\r\n   }\r\n   scores.set(id, score);\r\n   LocalStorage.setMap(TESTS, scores);\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ProgressCircle } from '../components/forms/IO';\r\n\r\nimport { PATH_LEARN, PATH_PRACTICE } from '../utils/constants';\r\nimport { Icon } from '../utils/utilities';\r\n\r\nimport { ECourseType, getCourses, ICourse } from '../data/courses';\r\nimport { getTests } from '../data/tests';\r\nimport { getProgressOverall, getProgressSummary, getTestScore } from '../data/progress';\r\n\r\nimport { userContext } from '../App';\r\n\r\nimport '../styles/Home.css';\r\n\r\nfunction Home(): React.ReactElement {\r\n   const user = useContext(userContext);\r\n\r\n   function renderPracticeCards(): React.ReactElement[] {\r\n      const out: React.ReactElement[] = [];\r\n      const tests = getTests();\r\n\r\n      tests.forEach((test) => {\r\n         const testScore = getTestScore(test.id);\r\n         out.push(\r\n            <Link\r\n               key={uuid()}\r\n               className={\r\n                  test.available\r\n                     ? 'btn bg-normal m-0 p-1 d-flex align-items-center justify-content-between'\r\n                     : 'btn bg-normal m-0 p-1 d-flex align-items-center justify-content-between disabled'\r\n               }\r\n               to={PATH_PRACTICE + test.id}\r\n            >\r\n               <span>\r\n                  <h5>{test.category}</h5>\r\n                  <p>{test.name}</p>\r\n               </span>\r\n               <FontAwesomeIcon icon={Icon.byValue(testScore?.value || 0)} size=\"3x\" />\r\n            </Link>,\r\n         );\r\n      });\r\n\r\n      return out;\r\n   }\r\n\r\n   function renderLearnCards(): React.ReactElement[] {\r\n      const out: React.ReactElement[] = [];\r\n      const courses = getCourses();\r\n\r\n      Object.values(ECourseType).forEach((type: string) => {\r\n         const listItems: React.ReactElement[] = [];\r\n         const filtered = courses.filter((course: ICourse) => {\r\n            return course.category === type;\r\n         });\r\n\r\n         filtered.forEach((course: ICourse) => {\r\n            listItems.push(\r\n               <li key={uuid()}>\r\n                  <Link className={course.available ? '' : 'disabled'} to={PATH_LEARN + course.id}>\r\n                     {course.name}\r\n                  </Link>\r\n               </li>,\r\n            );\r\n         });\r\n\r\n         out.push(\r\n            <div key={uuid()} className=\"bg-normal rounded m-0 p-1\">\r\n               <h5 className=\"d-flex justify-content-between\">\r\n                  {type}\r\n                  <FontAwesomeIcon icon={Icon.byType(type)} />\r\n               </h5>\r\n               <ul className=\"list-unstyled\">{listItems}</ul>\r\n            </div>,\r\n         );\r\n      });\r\n\r\n      return out;\r\n   }\r\n\r\n   return (\r\n      <div className=\"container p-1\">\r\n         <header className=\"home-header\">\r\n            <div>\r\n               <div className=\"my-4\">\r\n                  <h1>Hi {user || 'Visitor'}!</h1>\r\n                  <h4>What are we learning today?</h4>\r\n               </div>\r\n               <div className=\"progress-deck\">\r\n                  {Array.from(getProgressSummary()).map(([key, value]) => {\r\n                     return (\r\n                        <div key={uuid()} className=\"progress-card\">\r\n                           <h5>{key}</h5>\r\n                           <ProgressCircle value={value} />\r\n                        </div>\r\n                     );\r\n                  })}\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"progress-overview\">\r\n               <div className=\"circle bg-light\">\r\n                  <ProgressCircle value={getProgressOverall()} size={16} />\r\n               </div>\r\n            </div>\r\n         </header>\r\n         <hr className=\"hide\" />\r\n         <section>\r\n            <h3 className=\"text-center my-1\">Practice</h3>\r\n            <div className=\"deck\">{renderPracticeCards()}</div>\r\n         </section>\r\n         <hr className=\"hide\" />\r\n         <section>\r\n            <h3 className=\"text-center my-1\">Learn</h3>\r\n            <div className=\"deck\">{renderLearnCards()}</div>\r\n         </section>\r\n         <hr className=\"hide\" />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router';\r\n\r\nimport { PATH_INDEX } from '../utils/constants';\r\n\r\nfunction Error(): React.ReactElement {\r\n   const navigator = useNavigate();\r\n\r\n   return (\r\n      <div className=\"dialog text-center my-4 py-4\">\r\n         <h2>¯\\_(ツ)_/¯</h2>\r\n         <h3>Something went wrong.</h3>\r\n         <button className=\"btn m-1\" onClick={() => navigator(PATH_INDEX)}>\r\n            Go back to safety\r\n         </button>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Error;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { PATH_INDEX } from '../utils/constants';\r\n\r\ninterface ILoginProps {\r\n   onLogin: (username: string, preview?: boolean) => void;\r\n}\r\n\r\nfunction Login({ onLogin }: ILoginProps): React.ReactElement {\r\n   const [inputName, setInputName] = useState('');\r\n   const navigate = useNavigate();\r\n\r\n   function handleRegister(event: any, preview: boolean): void {\r\n      event.preventDefault();\r\n      if (inputName) {\r\n         const name = inputName.split(' ')[0];\r\n         const displayName = name.charAt(0).toUpperCase() + name.slice(1).toLowerCase();\r\n         onLogin(displayName, preview);\r\n         navigate(PATH_INDEX);\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className=\"container my-4 py-4 text-center\">\r\n         <h2>\r\n            Welcome to <span className=\"title\">Homework</span>!\r\n         </h2>\r\n         <h3>Lets get started.</h3>\r\n         <div className=\"dialog my-2 p-1 bg-normal rounded\">\r\n            <p>\r\n               <FontAwesomeIcon icon={faUserCircle} size=\"10x\" />\r\n            </p>\r\n            <form onSubmit={(event) => handleRegister(event, false)} className=\"mt-2\">\r\n               <input\r\n                  className=\"text-center\"\r\n                  type=\"text\"\r\n                  placeholder=\"What are we going to call you?\"\r\n                  value={inputName}\r\n                  onChange={(event) => setInputName(event.currentTarget.value)}\r\n               />\r\n               <input className=\"btn btn-accent\" type=\"submit\" value=\"Start learning\" />\r\n               <button className=\"btn\" onClick={(event) => handleRegister(event, true)}>\r\n                  Take a tour\r\n               </button>\r\n            </form>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useContext } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { userContext } from '../App';\r\n\r\nfunction Profile(): React.ReactElement {\r\n   const user = useContext(userContext);\r\n\r\n   return (\r\n      <div className=\"my-2 text-center\">\r\n         <div className=\"dialog bg-normal rounded\">\r\n            <div className=\"p-2\">\r\n               <FontAwesomeIcon icon={faUserCircle} size=\"10x\" />\r\n               <h1>Hi {user}</h1>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSadTear, faFrown, faSmile, faSmileBeam } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { getScore, updateScore } from '../../data/progress';\r\n\r\nconst ICONS = [faSadTear, faFrown, faSmile, faSmileBeam];\r\n\r\ninterface IScoreMeterProps {\r\n   courseId: string;\r\n}\r\n\r\nfunction ScoreSelector({ courseId }: IScoreMeterProps): React.ReactElement {\r\n   const [score, setScore] = useState(getScore(courseId));\r\n\r\n   useEffect(() => {\r\n      setScore(getScore(courseId));\r\n   }, [courseId]);\r\n\r\n   function handleScoreSelected(value: number): void {\r\n      updateScore(courseId, value);\r\n      setScore(getScore(courseId));\r\n   }\r\n\r\n   function renderButtons(): React.ReactElement[] {\r\n      const buttons = ICONS.map((icon: IconProp, index: number) => {\r\n         const className =\r\n            score > index / ICONS.length && score <= (index + 1) / ICONS.length ? 'color-light' : 'color-dark';\r\n         return (\r\n            <button className={className} key={uuid()} onClick={() => handleScoreSelected((index + 1) / ICONS.length)}>\r\n               <FontAwesomeIcon icon={icon} size=\"3x\" />\r\n            </button>\r\n         );\r\n      });\r\n      return buttons;\r\n   }\r\n\r\n   return (\r\n      <div className=\"text-center\">\r\n         <h4>How are we doing?</h4>\r\n         <fieldset className=\"d-flex justify-content-center my-1\">{renderButtons()}</fieldset>\r\n         <p className=\"color-dark\">\r\n            Select how you feel about this subject to track your progress.\r\n            <br />\r\n            <small>The score will be set again after completing a test on this subject.</small>\r\n         </p>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ScoreSelector;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { v4 as uuid } from 'uuid';\r\nimport SyntaxHighlighter from 'highlight.js/lib/core';\r\nimport csharp from 'highlight.js/lib/languages/csharp';\r\nimport 'highlight.js/styles/vs2015.css';\r\n\r\nimport ScoreSelector from '../components/forms/ScoreSelector';\r\n\r\nimport { Text } from '../utils/utilities';\r\nimport { PATH_ERROR } from '../utils/constants';\r\n\r\nimport { getCourseDetails, ICourseDetails, ICourseSection } from '../data/courses';\r\n\r\nfunction Learn(): React.ReactElement {\r\n   const params = useParams();\r\n   const navigate = useNavigate();\r\n   const [course, setCourse] = useState<ICourseDetails>();\r\n\r\n   useEffect(() => {\r\n      if (params.id) {\r\n         try {\r\n            const c = getCourseDetails(params.id);\r\n            setCourse(c);\r\n         } catch (error) {\r\n            navigate(PATH_ERROR);\r\n         }\r\n      } else {\r\n         navigate(PATH_ERROR);\r\n      }\r\n   }, [params]);\r\n\r\n   useEffect(() => {\r\n      SyntaxHighlighter.registerLanguage('cs', csharp);\r\n      SyntaxHighlighter.highlightAll();\r\n   }, [course]);\r\n\r\n   if (course) {\r\n      return (\r\n         <article className=\"container p-1\">\r\n            <h2>{course.title}</h2>\r\n            <p>{Text.toParagraph(course.description)}</p>\r\n            {course.sections.map((section: ICourseSection) => {\r\n               return (\r\n                  <section key={uuid()}>\r\n                     <hr />\r\n                     <h3>{section.title}</h3>\r\n                     <p>{Text.toParagraph(section.description)}</p>\r\n\r\n                     {section.example ? (\r\n                        <pre className=\"language-cs\">\r\n                           <code>{section.example}</code>\r\n                        </pre>\r\n                     ) : (\r\n                        ''\r\n                     )}\r\n                  </section>\r\n               );\r\n            })}\r\n\r\n            <hr />\r\n            <ScoreSelector courseId={course.id} />\r\n            <hr className=\"hide\" />\r\n         </article>\r\n      );\r\n   } else {\r\n      return (\r\n         <div className=\"dialog text-center my-4 py-4\">\r\n            <h2>Loading...</h2>\r\n            <p>Please wait.</p>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Learn;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { v4 as uuid } from 'uuid';\r\nimport SyntaxHighlighter from 'highlight.js/lib/core';\r\nimport csharp from 'highlight.js/lib/languages/csharp';\r\nimport 'highlight.js/styles/vs2015.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSadTear, faFrown, faSmile, faSmileWink, faSmileBeam } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { userContext } from '../App';\r\n\r\nimport { PATH_ERROR } from '../utils/constants';\r\nimport { Text } from '../utils/utilities';\r\n\r\nimport { ITestQuestion, getTestDetails, ITestDetails } from '../data/tests';\r\nimport { updateScore, updateTestScore } from '../data/progress';\r\n\r\nimport { Radio } from '../components/forms/IO';\r\n\r\ninterface IQuestion {\r\n   selected: number;\r\n   answer: number;\r\n}\r\n\r\n/* Fix page redirect when loading failed or invalid params */\r\nfunction Practice(): React.ReactElement {\r\n   const username = useContext(userContext);\r\n   const params = useParams();\r\n   const navigate = useNavigate();\r\n   const [testDetails, setTestDetails] = useState<ITestDetails>();\r\n   const [questions, setQuestions] = useState<IQuestion[]>([]);\r\n   const [testScore, setTestScore] = useState(-1);\r\n   const [validation, setValidation] = useState(false);\r\n\r\n   useEffect((): void => {\r\n      if (params.id) {\r\n         try {\r\n            const test = getTestDetails(params.id);\r\n            if (test) {\r\n               const qs: IQuestion[] = [];\r\n               test.questions.forEach((question: ITestQuestion) => {\r\n                  qs.push({\r\n                     selected: -1,\r\n                     answer: question.answer,\r\n                  });\r\n               });\r\n\r\n               setTestDetails(test);\r\n               setQuestions(qs);\r\n            }\r\n         } catch (error) {\r\n            navigate(PATH_ERROR);\r\n         }\r\n      } else {\r\n         navigate(PATH_ERROR);\r\n      }\r\n   }, [params]);\r\n\r\n   useEffect(() => {\r\n      SyntaxHighlighter.registerLanguage('cs', csharp);\r\n      SyntaxHighlighter.highlightAll();\r\n   }, [testDetails, questions, validation]);\r\n\r\n   function handleFormSubmit(event: any): void {\r\n      event.preventDefault();\r\n\r\n      let score = 0;\r\n      questions.forEach((question) => {\r\n         if (question.selected == question.answer) {\r\n            score++;\r\n         }\r\n      });\r\n\r\n      score /= questions.length;\r\n      setTestScore(score);\r\n\r\n      if (score >= 0.25 && testDetails) {\r\n         updateTestScore(testDetails.id, score);\r\n         testDetails.subjects.forEach((course) => {\r\n            updateScore(course, score);\r\n         });\r\n      }\r\n\r\n      setValidation(true);\r\n   }\r\n\r\n   function handleValidation(qIndex: number, oIndex: number): boolean | undefined {\r\n      if (validation) {\r\n         if (questions[qIndex].selected == -1) {\r\n            return questions[qIndex].answer == oIndex;\r\n         } else if (questions[qIndex].answer == oIndex) {\r\n            return true;\r\n         } else if (questions[qIndex].selected == oIndex) {\r\n            return false;\r\n         }\r\n      }\r\n      return undefined;\r\n   }\r\n\r\n   function renderScore(): React.ReactElement {\r\n      let icon: IconProp;\r\n      let message: string;\r\n\r\n      if (testScore != -1) {\r\n         if (testScore >= 0.8) {\r\n            icon = faSmileBeam;\r\n            message = 'Great job ' + username + '!!!';\r\n         } else if (testScore == 0.69) {\r\n            icon = faSmileWink;\r\n            message = 'Nice!';\r\n         } else if (testScore >= 0.6) {\r\n            icon = faSmile;\r\n            message = 'Pretty good!';\r\n         } else if (testScore >= 0.4) {\r\n            icon = faFrown;\r\n            message = 'Almost there!';\r\n         } else {\r\n            icon = faSadTear;\r\n            message = 'Try again, You can do it!';\r\n         }\r\n\r\n         return (\r\n            <>\r\n               <h2>\r\n                  <FontAwesomeIcon icon={icon} />\r\n                  {' ' + Text.toPercentage(testScore)}\r\n               </h2>\r\n               <p>{message}</p>\r\n            </>\r\n         );\r\n      }\r\n      return <p className=\"display-5\">Submit to see your results.</p>;\r\n   }\r\n\r\n   if (testDetails && questions) {\r\n      return (\r\n         <div className=\"container p-1\">\r\n            <h2>{testDetails.title}</h2>\r\n            <p>{Text.toParagraph(testDetails.description)}</p>\r\n            <form onSubmit={handleFormSubmit}>\r\n               <fieldset name=\"test-field\" disabled={testScore != -1}>\r\n                  {testDetails.questions.map((question: ITestQuestion, qIndex: number) => {\r\n                     const key = uuid();\r\n                     return (\r\n                        <fieldset key={key}>\r\n                           <hr />\r\n                           <h5>{`${qIndex + 1}. ` + question.question}</h5>\r\n                           <p>{question.description}</p>\r\n                           {question.options.map((option: string, oIndex: number) => {\r\n                              return (\r\n                                 <Radio\r\n                                    key={uuid()}\r\n                                    name={key}\r\n                                    value={oIndex}\r\n                                    checked={questions[qIndex].selected == oIndex}\r\n                                    onChange={() => {\r\n                                       questions[qIndex].selected = oIndex;\r\n                                       setQuestions([...questions]);\r\n                                    }}\r\n                                    validation={handleValidation(qIndex, oIndex)}\r\n                                 >\r\n                                    <pre className=\"language-cs\">\r\n                                       <code>{option}</code>\r\n                                    </pre>\r\n                                 </Radio>\r\n                              );\r\n                           })}\r\n                           {/* <div className=\"text-center\">\r\n                              {question.hint ? (\r\n                                 <button\r\n                                    className=\"btn\"\r\n                                    style={{ textTransform: 'none' }}\r\n                                    onClick={(e) => {\r\n                                       e.currentTarget.innerText = question.hint || '';\r\n                                       e.currentTarget.disabled = true;\r\n                                    }}\r\n                                 >\r\n                                    Hint\r\n                                 </button>\r\n                              ) : (\r\n                                 ''\r\n                              )}\r\n                           </div> */}\r\n                        </fieldset>\r\n                     );\r\n                  })}\r\n\r\n                  <hr />\r\n                  <div className=\"text-center\">\r\n                     <div id=\"test-results\" className=\"text-center my-5 py-5\">\r\n                        {renderScore()}\r\n                        <input className=\"btn btn-accent\" type=\"submit\" value=\"Submit test\" />\r\n                     </div>\r\n                  </div>\r\n                  <hr className=\"hide\" />\r\n               </fieldset>\r\n            </form>\r\n         </div>\r\n      );\r\n   } else {\r\n      return (\r\n         <div className=\"dialog text-center my-4 py-4\">\r\n            <h2>Loading...</h2>\r\n            <p>Please wait.</p>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Practice;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nfunction Footer(): React.ReactElement {\r\n   const date = new Date();\r\n   return (\r\n      <div className=\"bg-normal color-dark\">\r\n         <div className=\"container\">\r\n            <div className=\"footer p-1\">\r\n               <p>\r\n                  <a href=\"https://github.com/StrykeDev\">\r\n                     StrykeDev <FontAwesomeIcon icon={faGithub} /> GitHub\r\n                  </a>\r\n                  {' | '}\r\n                  <a href=\"mailto:attias.barak@gmail.com\">attias.barak@gmail.com</a>\r\n               </p>\r\n               <p>Barak Attias {date.getFullYear()} &copy; Made In Israel</p>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { createContext, useEffect, useState } from 'react';\r\n\r\nimport { LocalStorage } from '../services/LocalStorage';\r\n\r\nimport { THEME_COLOR, THEME_FONT } from '../utils/constants';\r\nimport { IContextProps } from './ContextLoader';\r\n\r\nexport enum EThemeColor {\r\n   Dark = 'dark',\r\n   Light = 'light',\r\n}\r\n\r\nexport enum EThemeFont {\r\n   Normal = 'normal',\r\n   Large = 'large',\r\n}\r\n\r\nexport const ThemeColorContext = createContext<any>(null);\r\nexport const ThemeFontContext = createContext<any>(null);\r\n\r\nfunction ThemeContext({ children }: IContextProps): React.ReactElement {\r\n   const [color, setColor] = useState(LocalStorage.getItem(THEME_COLOR) || EThemeColor.Dark);\r\n   const [font, setFont] = useState(LocalStorage.getItem(THEME_FONT) || EThemeFont.Normal);\r\n\r\n   useEffect(() => {\r\n      document.body.setAttribute('data-theme-color', color.toString());\r\n      document.body.setAttribute('data-theme-font', font.toString());\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      document.body.classList.add('theme-active');\r\n\r\n      document.body.setAttribute('data-theme-color', color.toString());\r\n      document.body.setAttribute('data-theme-font', font.toString());\r\n\r\n      LocalStorage.setItem(THEME_COLOR, color);\r\n      LocalStorage.setItem(THEME_FONT, font);\r\n\r\n      const handle = setTimeout(() => {\r\n         document.body.classList.remove('theme-active');\r\n      }, 500);\r\n\r\n      return () => {\r\n         clearTimeout(handle);\r\n      };\r\n   }, [color, font]);\r\n\r\n   function toggleColor() {\r\n      if (color === EThemeColor.Dark) {\r\n         setColor(EThemeColor.Light);\r\n      } else {\r\n         setColor(EThemeColor.Dark);\r\n      }\r\n   }\r\n\r\n   function toggleFont() {\r\n      if (font === EThemeFont.Normal) {\r\n         setFont(EThemeFont.Large);\r\n      } else {\r\n         setFont(EThemeFont.Normal);\r\n      }\r\n   }\r\n\r\n   return (\r\n      <ThemeColorContext.Provider value={{ color, setColor, toggleColor }}>\r\n         <ThemeFontContext.Provider value={{ font, setFont, toggleFont }}>{children}</ThemeFontContext.Provider>\r\n      </ThemeColorContext.Provider>\r\n   );\r\n}\r\n\r\nexport default ThemeContext;\r\n","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faBrush, faFont, faGraduationCap, faPaintBrush } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { PATH_INDEX, PATH_LEARN, PATH_PRACTICE } from '../../../utils/constants';\r\n\r\nimport { ThemeColorContext, ThemeFontContext } from '../../../data/ThemeContext';\r\nimport { ECourseType, getCourses, ICourse } from '../../../data/courses';\r\nimport { getTests } from '../../../data/tests';\r\n\r\nimport '../../../styles/MainNav.css';\r\n\r\nfunction MainNav(): React.ReactElement {\r\n   const location = useLocation();\r\n   const { toggleColor } = useContext(ThemeColorContext);\r\n   const { toggleFont } = useContext(ThemeFontContext);\r\n   const [background, setBackground] = useState(true);\r\n   const [scroll, setScroll] = useState(window.scrollY > 10);\r\n   const [open, setOpen] = useState(false);\r\n   const [tab, setTab] = useState(-2);\r\n\r\n   useEffect(() => {\r\n      document.body.addEventListener('click', (event) => {\r\n         if (event.target instanceof HTMLAnchorElement) {\r\n            const target = event.target as HTMLAnchorElement;\r\n            if (target.classList.contains('nav-link')) {\r\n               return;\r\n            }\r\n         }\r\n         setOpen(false);\r\n      });\r\n\r\n      window.addEventListener('scroll', () => {\r\n         setScroll(window.scrollY > 10);\r\n      });\r\n\r\n      window.addEventListener('resize', () => {\r\n         setOpen(false);\r\n      });\r\n   }, []);\r\n\r\n   // Tabs\r\n   function renderLearnTab() {\r\n      const out: React.ReactElement[] = [];\r\n      const courses = getCourses();\r\n\r\n      Object.values(ECourseType).forEach((type) => {\r\n         const listItems: React.ReactElement[] = [];\r\n         const filtered = courses.filter((course: ICourse) => {\r\n            return course.category === type;\r\n         });\r\n\r\n         filtered.forEach((course: ICourse) => {\r\n            listItems.push(\r\n               <li key={uuid()}>\r\n                  <Link className={course.available ? '' : 'disabled'} to={PATH_LEARN + course.id}>\r\n                     {course.name}\r\n                  </Link>\r\n               </li>,\r\n            );\r\n         });\r\n\r\n         out.push(\r\n            <div key={uuid()}>\r\n               <h5>{type}</h5>\r\n               <ul className=\"list-unstyled\">{listItems}</ul>\r\n            </div>,\r\n         );\r\n      });\r\n\r\n      return out;\r\n   }\r\n\r\n   function renderPracticeTab() {\r\n      const out: React.ReactElement[] = [];\r\n      const tests = getTests();\r\n\r\n      Object.values(ECourseType).forEach((type) => {\r\n         const listItems: React.ReactElement[] = [];\r\n         const filtered = tests.filter((test: ICourse) => {\r\n            return test.category === type;\r\n         });\r\n\r\n         filtered.forEach((test: ICourse) => {\r\n            listItems.push(\r\n               <li key={uuid()}>\r\n                  <Link className={test.available ? '' : 'disabled'} to={PATH_PRACTICE + test.id}>\r\n                     {test.name}\r\n                  </Link>\r\n               </li>,\r\n            );\r\n         });\r\n\r\n         out.push(\r\n            <div key={uuid()}>\r\n               <h5>{type}</h5>\r\n               <ul className=\"list-unstyled\">{listItems}</ul>\r\n            </div>,\r\n         );\r\n      });\r\n\r\n      return out;\r\n   }\r\n\r\n   function renderTabs(): React.ReactElement {\r\n      switch (tab) {\r\n         case -1:\r\n            return (\r\n               <div className=\"nav-details-items\">\r\n                  <div className=\"d-flex justify-content-center\">\r\n                     <a className=\"text-center mx-2\" onClick={() => toggleColor()}>\r\n                        <h2>\r\n                           <FontAwesomeIcon icon={faPaintBrush} />\r\n                        </h2>\r\n                        <p>Theme</p>\r\n                     </a>\r\n                     <a className=\"text-center mx-2\" onClick={() => toggleFont()}>\r\n                        <h2>\r\n                           <FontAwesomeIcon icon={faFont} />\r\n                        </h2>\r\n                        <p>Font</p>\r\n                     </a>\r\n                  </div>\r\n                  <hr className=\"my-2\" />\r\n                  <div>\r\n                     <h3 className=\"text-center\">Learn</h3>\r\n                     {renderLearnTab()}\r\n                  </div>\r\n                  <hr className=\"my-2\" />\r\n                  <div>\r\n                     <h3 className=\"text-center\">Practice</h3>\r\n                     {renderPracticeTab()}\r\n                  </div>\r\n               </div>\r\n            );\r\n         case 0:\r\n            return <div className=\"nav-details-items\">{renderLearnTab()}</div>;\r\n         case 1:\r\n            return <div className=\"nav-details-items\">{renderPracticeTab()}</div>;\r\n         default:\r\n            return <div></div>;\r\n      }\r\n   }\r\n\r\n   function handleTabChange(newTab: number) {\r\n      if (tab != newTab) {\r\n         setTab(newTab);\r\n         setOpen(true);\r\n      } else {\r\n         setOpen(!open);\r\n      }\r\n   }\r\n\r\n   // Nav open\r\n   const nav = useRef<HTMLDivElement>(null);\r\n\r\n   useEffect(() => {\r\n      nav.current?.classList.add('open-details-active');\r\n\r\n      const handle = setTimeout(() => {\r\n         nav.current?.classList.remove('open-details-active');\r\n      }, 500);\r\n\r\n      if (open) {\r\n         nav.current?.classList.add('open-details');\r\n      } else {\r\n         nav.current?.classList.remove('open-details');\r\n      }\r\n\r\n      return () => {\r\n         clearTimeout(handle);\r\n      };\r\n   }, [open]);\r\n\r\n   useEffect(() => {\r\n      if (location.pathname === PATH_INDEX && !open && !scroll) {\r\n         setBackground(false);\r\n      } else {\r\n         setBackground(true);\r\n      }\r\n   }, [location, open, scroll]);\r\n\r\n   useEffect(() => {\r\n      nav.current?.classList.add('open-details-active');\r\n      const handle = setTimeout(() => {\r\n         nav.current?.classList.remove('open-details-active');\r\n      }, 500);\r\n\r\n      if (background) {\r\n         nav.current?.classList.add('bg-normal');\r\n      } else {\r\n         nav.current?.classList.remove('bg-normal');\r\n      }\r\n\r\n      return () => {\r\n         clearTimeout(handle);\r\n      };\r\n   }, [background]);\r\n\r\n   return (\r\n      <div className=\"main-nav\">\r\n         <div ref={nav} className=\"nav\">\r\n            <div className=\"container\">\r\n               <div className=\"nav-items\">\r\n                  <Link to={PATH_INDEX} className=\"title\">\r\n                     <h4>\r\n                        <FontAwesomeIcon icon={faGraduationCap} /> Homework\r\n                        <sup> .NET</sup>\r\n                     </h4>\r\n                  </Link>\r\n                  <a className=\"nav-link\" onClick={() => handleTabChange(0)}>\r\n                     Learn\r\n                  </a>\r\n                  <a className=\"nav-link\" onClick={() => handleTabChange(1)}>\r\n                     Practice\r\n                  </a>\r\n                  <a className=\"nav-link\" onClick={() => toggleColor()}>\r\n                     Theme\r\n                  </a>\r\n                  <a className=\"nav-link\" onClick={() => toggleFont()}>\r\n                     Font\r\n                  </a>\r\n                  <a className=\"nav-link nav-menu ml-auto\" onClick={() => handleTabChange(-1)}>\r\n                     <h4>\r\n                        <FontAwesomeIcon icon={faBars} />\r\n                     </h4>\r\n                  </a>\r\n               </div>\r\n               <div className=\"nav-details\">{renderTabs()}</div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MainNav;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Outlet, useLocation, useNavigate } from 'react-router';\r\nimport Footer from './components/Footer';\r\nimport MainNav from './components/MainNav';\r\n\r\nimport '../../styles/Layout.css';\r\nimport { userContext } from '../../App';\r\nimport { PATH_INDEX, PATH_LOGIN } from '../../utils/constants';\r\n\r\nfunction Layout(): React.ReactElement {\r\n   const user = useContext(userContext);\r\n   const location = useLocation();\r\n   const navigate = useNavigate();\r\n\r\n   useEffect(() => {\r\n      if (location.pathname === PATH_LOGIN) {\r\n         if (user) {\r\n            navigate(PATH_INDEX);\r\n         }\r\n      } else {\r\n         if (!user) {\r\n            navigate(PATH_LOGIN);\r\n         }\r\n      }\r\n   }, [location]);\r\n\r\n   return (\r\n      <div className=\"layout\">\r\n         <MainNav />\r\n         <Outlet />\r\n         <Footer />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\nimport { LocalStorage } from '../services/LocalStorage';\r\n\r\nimport { PATH_INDEX, PREVIEW, PROGRESS, TESTS } from '../utils/constants';\r\n\r\nfunction Preview(): React.ReactElement {\r\n   function handleDisablePreview() {\r\n      LocalStorage.setItem(PREVIEW, false);\r\n      LocalStorage.removeItem(PROGRESS);\r\n      LocalStorage.removeItem(TESTS);\r\n      window.location.href = PATH_INDEX;\r\n   }\r\n\r\n   return (\r\n      <div className=\"preview-warning\">\r\n         <h6 className=\"mb-1\">Viewing website in preview mode, progress will be lost!</h6>\r\n         <a className=\"btn btn-accent\" onClick={handleDisablePreview}>\r\n            Disable preview mode\r\n         </a>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Preview;\r\n","import React from 'react';\r\n\r\nimport ThemeContext from './ThemeContext';\r\n\r\nexport interface IContextProps {\r\n   children: React.ReactElement;\r\n}\r\n\r\nfunction ContextLoader({ children }: IContextProps) {\r\n   return <ThemeContext>{children}</ThemeContext>;\r\n}\r\n\r\nexport default ContextLoader;\r\n","import React, { useState, useEffect, createContext } from 'react';\r\nimport { Navigate, Route, Routes } from 'react-router';\r\n\r\n// Services\r\nimport { LocalStorage } from './services/LocalStorage';\r\n\r\n// Utils\r\nimport {\r\n   USERNAME,\r\n   APP_VER,\r\n   VERSION,\r\n   CONTENT_VER,\r\n   CONTENT,\r\n   PATH_INDEX,\r\n   PATH_ERROR,\r\n   PREVIEW,\r\n   PATH_LEARN,\r\n   PATH_PRACTICE,\r\n   PATH_LOGIN,\r\n   PATH_PROFILE,\r\n} from './utils/constants';\r\n\r\n// Views\r\nimport Home from './views/Home';\r\nimport Error from './views/Error';\r\nimport Login from './views/Login';\r\nimport Profile from './views/Profile';\r\nimport Learn from './views/Learn';\r\nimport Practice from './views/Practice';\r\n\r\n// Style\r\nimport './styles/App.css';\r\nimport Layout from './components/Layout/Layout';\r\nimport { getCourses } from './data/courses';\r\nimport { updateScore, updateTestScore } from './data/progress';\r\nimport { getTests } from './data/tests';\r\nimport Preview from './components/Preview';\r\nimport ContextLoader from './data/ContextLoader';\r\n\r\nexport const userContext = createContext<string>('');\r\n\r\nfunction App(): React.ReactElement {\r\n   const [username, setUsername] = useState<string>(LocalStorage.getItem(USERNAME));\r\n   const [previewMode, setPreviewMode] = useState<boolean>(JSON.parse(LocalStorage.getItem(PREVIEW)));\r\n\r\n   useEffect((): void => {\r\n      if (LocalStorage.getItem(APP_VER) != VERSION) {\r\n         LocalStorage.setItem(APP_VER, VERSION);\r\n      }\r\n\r\n      if (LocalStorage.getItem(CONTENT_VER) != CONTENT) {\r\n         LocalStorage.setItem(CONTENT_VER, CONTENT);\r\n      }\r\n   }, []);\r\n\r\n   function handleLogin(newUsername: string, preview: boolean = false): void {\r\n      if (!username) {\r\n         LocalStorage.setItem(USERNAME, newUsername);\r\n         setUsername(newUsername);\r\n         if (preview) {\r\n            LocalStorage.setItem(PREVIEW, true);\r\n            setPreviewMode(true);\r\n\r\n            const courses = getCourses();\r\n            courses.map((course) => {\r\n               updateScore(course.id, (Math.random() + 0.9) / 2);\r\n            });\r\n\r\n            const tests = getTests();\r\n            tests.map((test) => {\r\n               updateTestScore(test.id, (Math.random() + 0.9) / 2);\r\n            });\r\n         } else {\r\n            LocalStorage.setItem(PREVIEW, false);\r\n            setPreviewMode(false);\r\n         }\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className=\"app\">\r\n         <userContext.Provider value={username}>\r\n            <ContextLoader>\r\n               <Routes>\r\n                  <Route path=\"/\" element={<Layout />}>\r\n                     <Route path={PATH_INDEX} element={<Home />} />\r\n                     <Route path={PATH_ERROR} element={<Error />} />\r\n                     <Route path={PATH_LOGIN} element={<Login onLogin={handleLogin} />} />\r\n                     <Route path={PATH_PROFILE} element={<Profile />} />\r\n                     <Route path={PATH_LEARN + ':id'} element={<Learn />} />\r\n                     <Route path={PATH_PRACTICE + ':id'} element={<Practice />} />\r\n                  </Route>\r\n                  <Route path=\"/\" element={<Navigate to={PATH_INDEX} />} />\r\n                  <Route path=\"*\" element={<Navigate to={PATH_ERROR} />} />\r\n               </Routes>\r\n            </ContextLoader>\r\n         </userContext.Provider>\r\n\r\n         <div className=\"overlay-container\">{previewMode ? <Preview /> : ''}</div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport App from './App';\r\n\r\nimport './styles/Theme.css';\r\n\r\nReactDOM.render(\r\n   <React.StrictMode>\r\n      <BrowserRouter>\r\n         <App />\r\n         <div>\r\n            {/* <div style={{ padding: '1em', backgroundColor: 'var(--color-accent-light)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-accent-normal)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-accent-dark)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-secondary-light)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-secondary-normal)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-secondary-dark)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-success-light)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-success-normal)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-success-dark)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-danger-light)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-danger-normal)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-danger-dark)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-bg-light)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-bg-normal)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-bg-dark)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-text-light)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-text-normal)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-text-dark)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-btn-light)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-btn-normal)' }}> </div>\r\n            <div style={{ padding: '1em', backgroundColor: 'var(--color-btn-dark)' }}> </div> */}\r\n         </div>\r\n      </BrowserRouter>\r\n   </React.StrictMode>,\r\n   document.getElementById('root'),\r\n);\r\n\r\n/*\r\nReact\r\nDependencies\r\n\r\nComponents\r\n\r\nData\r\n\r\nUtils\r\n\r\nViews\r\n\r\nStyles\r\n*/\r\n"],"sourceRoot":""}